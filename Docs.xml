<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Outflow</name>
    </assembly>
    <members>
        <member name="T:Outflow.FullBatcher">
            <summary>
            Encodes FullBatches and queues reliable messages to be sent when processing is complete
            </summary>
        </member>
        <member name="P:Outflow.FullBatcher.IsProcessing">
            <summary>
            Whether any FullBatch messages are being encoded
            </summary>
        </member>
        <member name="P:Outflow.FullBatcher.Disposed">
            <summary>
            True if the batcher is no longer valid for use
            </summary>
        </member>
        <member name="M:Outflow.FullBatcher.#ctor(FrooxEngine.Session)">
            <summary>
            Instantiates a batcher for a given Session
            </summary>
            <param name="curSession">The session to operate on</param>
        </member>
        <member name="M:Outflow.FullBatcher.QueueFullEncode(FrooxEngine.FullBatch)">
            <summary>
            Queues a FullBatch to be encoded, implicitly sets IsProcessing
            </summary>
            <param name="batch">The patch to process</param>
        </member>
        <member name="M:Outflow.FullBatcher.TryQueueMessage(FrooxEngine.SyncMessage)">
            <summary>
            Tries to queue a reliable message. If no work is being done, then queueing will be skipped
            </summary>
            <param name="reliable">The message to encode</param>
            <returns></returns>
        </member>
        <member name="M:Outflow.FullBatcher.TryFlushQueuedMessages">
            <summary>
            Attempts to flush the queued messages. Only flushes when work is being done and messages are queued
            </summary>
            <returns>How many messages were flushed. -2 if processing is going on, -1 if there are simply no messages to flush</returns>
        </member>
        <member name="M:Outflow.FullBatcher.Dispose">
            <summary>
            Disposes of the batcher and stops all processing
            </summary>
        </member>
        <member name="M:Outflow.FullBatcher.Finalize">
            <summary>
            If somehow the batcher is orphaned, dispose of it properly
            </summary>
        </member>
        <member name="T:Outflow.Outflow.Session_Patches">
            <summary>
            Patches for FrooxEngine.Session
            </summary>
        </member>
        <member name="M:Outflow.Outflow.Session_Patches.EncodeLoop_Prefix(FrooxEngine.Session,System.Threading.AutoResetEvent@,Elements.Core.SpinQueue{FrooxEngine.SyncMessage}@)">
            <summary>
            Replaces the EncodeLoop method with a prefix
            </summary>
            <param name="__instance">Session instance to work on</param>
            <param name="___encodingThreadEvent">Event to trigger an encode cycle</param>
            <param name="___messagesToTransmit">Queue of messages to transmit</param>
            <returns>Whether to run the original function</returns>
        </member>
    </members>
</doc>
